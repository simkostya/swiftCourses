<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Diff</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>import UIKit

//var numbersArray = [-3, 34, -11, 2, 100, 432, 2, -94, -55, -8] 

// Task 1
// Замените все отрицательные числа на 0 и выведите массив в консоль

//for i in numbersArray.indices {
//    if numbersArray[i] &lt;= 0 {
//        numbersArray[i] = 0
//    }
//}
//print(numbersArray)

// Task 2
// Найдите минимальный и максимальный элемент в массиве и выведите его в консоль

//if let result1 = numbersArray.min(), let result2 = numbersArray.max() {
//    print("Minimum element : \(result1), Maximum element : \(result2)")
//} 

// Task 3
// Найдите сумму элементов массива чисел и выведите ее в консоль

//let sum = numbersArray.reduce(0, +)
//print("Sum of Array is : ", sum)

//Task 4
// Создайте массив с названиями всех месяцев, типа String. Затем создайте словарь и с помощью цикла задайте ему значения на основании массива: где в качестве ключей будут выступать цифры (индексы), а в качестве значений - элементы массива.

//let mounthArray = ["January", "February", "March", "April","May","June","July","August","September","October","November","December"]
//let dict = Dictionary(uniqueKeysWithValues: zip(mounthArray.indices, mounthArray)).sorted(by: &lt;)
//for i in dict{
//    print(i)
//}

// Task 5
// Создайте словарь: var dictionary = ["first": 1, "second": 2, "third": 3, "fourth": 4] Поменяйте местами значения по ключам “first” и “fourth”. Выведите в консоль итоговый словарь

//var dictionary = ["first": 1, "second": 2, "third": 3, "fourth": 4]
//if let value = dictionary["first"], let existingValue = dictionary["fourth"] {
//    dictionary["first"] = existingValue
//    dictionary["fourth"] = value
//}
//print(dictionary)

// Task 6
// Создайте пустой словарь calendar, так же вам понадобиться массив с месяцами из четвертого задания. С помощью цикла от 1970 до 2022 задайте значения для словаря. В качестве ключа пусть будет год, а значение это массив с месяцами.

//var calendar = [Int:[String]]()
//let mounthArray = ["January", "February", "March", "April","May","June","July","August","September","October","November","December"]
//
//for i in 1970...2022{
//    calendar[i] = mounthArray
//}
//let sortedYourArray = calendar.sorted( by: { $0.0 &lt; $1.0 })
//print(sortedYourArray)


// Task 7
// С помощью другого цикла добавьте в calendar на каждый год по одному месяцу с вашим названием, чтобы в каждом году вышло 13 месяцев.

//var calendar = [Int:[String]]()
//var mounthArray = ["January", "February", "March", "April","May","June","July","August","September","October","November","December"]
//mounthArray.insert(contentsOf: ["MyMounth"], at: 12)
//
//for i in 1970...2022{
//    calendar[i] = mounthArray
//}
//
//let sortedYourArray = calendar.sorted( by: { $0.0 &lt; $1.0 })
//print(sortedYourArray)

// Task 7.1
// На основании словаря, который у вас получился в седьмом задании, давайте создадим новый словарь, который будет включать в себя также и даты, a именно массив с числами от 1 до 31: Создайте массив с числами от 1 до 31 с помощью цикла. Создайте новый словарь calendarPro, где в качестве ключей будут года, в качестве значений вложенные словари. В которых в качестве ключей названия месяцев, а в качестве значений массив с днями созданный выше. Выведите в консоль 1 сентября 2019 года. PS: Для заполнения calendarPro используйте только созданный массив с числами, и словарь с месяцами, и никаких других данных

//var days = [Int]()
//for i in 1...31 {
//    days.append(i)
//}
//
//var monthArray = ["January": days, "February": days, "March": days, "April": days,"May": days,"June": days,"July": days,"August": days,"September": days,"October": days,"November": days,"December": days]
//
//var calendarPro = [Int:[String:[Int]]]()
//
//for i in 1970...2022{
//    calendarPro[i] = monthArray
//}
//
//var firstDay = days[0]
//let monthSpecific = monthArray.filter( { $0.key.hasPrefix("S") } ).keys
//let yearSpecific = (calendarPro.filter {$0.key == 2019}).keys
//let monthToString = Array(monthSpecific)[0]
//let yearToString = Array(yearSpecific)[0]
//
//print("Result is: \(firstDay) \(monthToString) \(yearToString)")


// Task 8
// Создайте 2 переменные с числами. Если значения равны, выведите в консоль их сумму умноженную на 3, если нет, выведите в консоль их сумму в случае если она четное число.

//var numberOne = 2
//var numberTwo = 3
//
//if numberOne == numberTwo {
//    print("\((numberOne + numberTwo)*3)")
//}else {
//    let resultTwo = numberOne + numberTwo
//    if resultTwo % 2 == 0 {
//        print(resultTwo)
//    }else {
//        print("Сумма чисел нечетная. Числа не равны")
//    }
//}

// Task 9
// Создайте строку, в которой будет храниться любая фраза из трех или более слов c восклицательным знаком в конце. Выведите в консоль первое и последнее слово из этой строки (без восклицательного знака). В этом задании необходимо найти способ доставать слова из вашей строки, погуглите методы с помощью которых это возможно реализовать.

//var myString = "Autumn is great!"
//
////Variant_1
//let words = myString.byWords
//print("First word is: \(words.first ?? ""), Last word is: \(words.last ?? "")")
//
//extension StringProtocol { 
//    var byWords: [SubSequence] {
//        var byWords: [SubSequence] = []
//        enumerateSubstrings(in: startIndex..., options: .byWords) { _, range, _, _ in
//            byWords.append(self[range])
//        }
//        return byWords
//    }
//}

//Variant_2
//let clean = myString.filter{ $0.isLetter || $0.isWhitespace }
//print(clean)
//if let lastIndex = clean.lastIndex(of: " "), 
//   let indexOne = clean.index(lastIndex, offsetBy: 1, limitedBy: clean.index(before: clean.endIndex)), 
//   let indexTwo = clean.firstIndex(of: " ") {
//    let firstWord = clean[...indexTwo]
//    let lastWord = clean[indexOne...]
//    
//    print("First word is: \(firstWord), Last word is: \(lastWord)")
//}

</string>
			<key>ModifiedRange</key>
			<string>{0, 5833}</string>
			<key>OriginalContent</key>
			<string></string>
			<key>OriginalRange</key>
			<string>{0, 0}</string>
		</dict>
	</array>
	<key>File</key>
	<string>Chapters/Chapter1.playgroundchapter/Pages/My Playground.playgroundpage/main.swift</string>
</dict>
</plist>
